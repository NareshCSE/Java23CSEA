package myAwtPrograms;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class Mycalculator extends JFrame implements ActionListener {
    private JTextField display;
    private String operator;
    private double firstOperand;

   
    public Mycalculator() {
        setTitle("CALCULATOR");
        setLayout(new GridLayout(5,4,5,5));  
        setSize(300, 400); 
        display = new JTextField();
        display.setEditable(false);
        display.setHorizontalAlignment(JTextField.RIGHT);
       
        add(display);

       
        String[] buttons = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "C", "0", "=", "+"
        };

        
        for (String text : buttons) {
            JButton button = new JButton(text);
            button.addActionListener(this);
            add(button);
        }

        
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  
    }

    
    @Override
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();

        try {
            switch (command) {
                case "C":
                    display.setText("");  
                    operator = "";
                    firstOperand = 0;
                    break;

                case "=":
                    double secondOperand = Double.parseDouble(display.getText());
                    double result = performOperation(firstOperand, secondOperand, operator);
                    display.setText(String.valueOf(result));
                    operator = "";
                    break;
                case "+":
                case "-":
                case "*":
                case "/":
                    firstOperand = Double.parseDouble(display.getText());
                    operator = command;
                    display.setText("");
                    break;

                default: 
                    display.setText(display.getText() + command);
                    break;
            }

        } catch (NumberFormatException ex) {
            display.setText("Error");
        } catch (ArithmeticException ex) {
            display.setText("Cannot divide by zero");
        }
    }

   
    private double performOperation(double first, double second, String op) {
        switch (op) {
            case "+":
                return first + second;
            case "-":
                return first - second;
            case "*":
                return first * second;
            case "/":
                if (second == 0) throw new ArithmeticException();
                return first / second;
            default:
                return 0;
        }
    }

    
    public static void main(String[] args) {
        new Mycalculator();  
    }
}
