Step 1: Create the Custom Exception
First, create a custom exception class called PinMisMatchException.

java
Copy code
// PinMisMatchException.java
public class PinMisMatchException extends Exception {
    public PinMisMatchException(String message) {
        super(message);
    }
}
Step 2: Create the ATM PIN Validator Class
Next, create the main class that will handle the ATM PIN validation logic.

java
Copy code
import java.util.Scanner;

public class ATMValidator {
    private static final String CORRECT_PIN = "1234"; // Example PIN
    private static final int MAX_ATTEMPTS = 3;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter account holder name: ");
        String accountHolderName = scanner.nextLine();

        try {
            validatePin(scanner);
            System.out.println("Access granted. Welcome, " + accountHolderName + "!");
        } catch (PinMisMatchException e) {
            System.out.println(e.getMessage());
        } finally {
            scanner.close();
        }
    }

    private static void validatePin(Scanner scanner) throws PinMisMatchException {
        for (int attempts = 1; attempts <= MAX_ATTEMPTS; attempts++) {
            System.out.print("Enter your PIN: ");
            String pin = scanner.nextLine();

            if (pin.equals(CORRECT_PIN)) {
                return; // PIN is correct
            } else {
                System.out.println("Incorrect PIN. Please try again.");
            }
        }

        throw new PinMisMatchException("Sorry.. Your Account Has been Locked.");
    }
}
