import java.util.Scanner;

public class BankApplication {

    static int MAX_CUSTOMERS = 100; // Maximum number of customers
    static String[] customerNames = new String[MAX_CUSTOMERS];
    static String[] aadharNumbers = new String[MAX_CUSTOMERS];
    static String[] panNumbers = new String[MAX_CUSTOMERS];
    static String[] accountNumbers = new String[MAX_CUSTOMERS];
    static double[] accountBalances = new double[MAX_CUSTOMERS];
    static int customerCount = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String continueOption;

        do {
            System.out.println("\n--- Bank Menu ---");
            System.out.println("1. Account Creation");
            System.out.println("2. Credit Amount");
            System.out.println("3. Debit Amount");
            System.out.println("4. Mini Statement/Balance Enquiry");
            System.out.println("5. Transfer Amount");
            System.out.println("6. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    createAccount(sc);
                    break;
                case 2:
                    creditAmount(sc);
                    break;
                case 3:
                    debitAmount(sc);
                    break;
                case 4:
                    miniStatement(sc);
                    break;
                case 5:
                    transferAmount(sc);
                    break;
                case 6:
                    System.out.println("Exiting the application.");
                    return; // Exit the program
                default:
                    System.out.println("Invalid option. Please choose again.");
            }

            System.out.print("Do you want to continue (y/n)? ");
            continueOption = sc.next();
        } while (continueOption.equalsIgnoreCase("y"));
    }

    // Function to create an account
    public static void createAccount(Scanner sc) {
        if (customerCount >= MAX_CUSTOMERS) {
            System.out.println("Customer limit reached. Cannot create more accounts.");
            return;
        }

        sc.nextLine(); // Consume the newline left by nextInt
        System.out.print("Enter Customer Name: ");
        customerNames[customerCount] = sc.nextLine();
        System.out.print("Enter Aadhar Number: ");
        aadharNumbers[customerCount] = sc.nextLine();
        System.out.print("Enter PAN Number: ");
        panNumbers[customerCount] = sc.nextLine();
        System.out.print("Enter Account Number: ");
        accountNumbers[customerCount] = sc.nextLine();
        accountBalances[customerCount] = 0.0; // Initial balance is zero
        customerCount++;

        System.out.println("Account created successfully!");
    }

    // Function to credit amount
    public static void creditAmount(Scanner sc) {
        System.out.print("Enter Account Number: ");
        String accountNumber = sc.next();
        int index = findAccountIndex(accountNumber);

        if (index != -1) {
            System.out.print("Enter Amount to Credit: ");
            double amount = sc.nextDouble();
            accountBalances[index] += amount;
            System.out.println("Amount credited successfully!");
        } else {
            System.out.println("Account not found.");
        }
    }

    // Function to debit amount
    public static void debitAmount(Scanner sc) {
        System.out.print("Enter Account Number: ");
        String accountNumber = sc.next();
        int index = findAccountIndex(accountNumber);

        if (index != -1) {
            System.out.print("Enter Amount to Debit: ");
            double amount = sc.nextDouble();
            if (accountBalances[index] >= amount) {
                accountBalances[index] -= amount;
                System.out.println("Amount debited successfully!");
            } else {
                System.out.println("Insufficient balance.");
            }
        } else {
            System.out.println("Account not found.");
        }
    }

    // Function to display mini statement/balance enquiry
    public static void miniStatement(Scanner sc) {
        System.out.print("Enter Account Number: ");
        String accountNumber = sc.next();
        int index = findAccountIndex(accountNumber);

        if (index != -1) {
            System.out.println("Customer Name: " + customerNames[index]);
            System.out.println("Aadhar Number: " + aadharNumbers[index]);
            System.out.println("PAN Number: " + panNumbers[index]);
            System.out.println("Account Number: " + accountNumbers[index]);
            System.out.println("Current Balance: " + accountBalances[index]);
        } else {
            System.out.println("Account not found.");
        }
    }

    // Function to transfer amount between accounts
    public static void transferAmount(Scanner sc) {
        System.out.print("Enter Your Account Number (From): ");
        String fromAccount = sc.next();
        int fromIndex = findAccountIndex(fromAccount);

        if (fromIndex == -1) {
            System.out.println("Source account not found.");
            return;
        }

        System.out.print("Enter Receiver's Account Number (To): ");
        String toAccount = sc.next();
        int toIndex = findAccountIndex(toAccount);

        if (toIndex == -1) {
            System.out.println("Destination account not found.");
            return;
        }

        System.out.print("Enter Amount to Transfer: ");
        double amount = sc.nextDouble();

        if (accountBalances[fromIndex] >= amount) {
            accountBalances[fromIndex] -= amount;
            accountBalances[toIndex] += amount;
            System.out.println("Amount transferred successfully!");
        } else {
            System.out.println("Insufficient balance.");
        }
    }

    // Helper function to find account index by account number
    public static int findAccountIndex(String accountNumber) {
        for (int i = 0; i < customerCount; i++) {
            if (accountNumbers[i].equals(accountNumber)) {
                return i;
            }
        }
        return -1; // Account not found
    }
}
