package javaproject539;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class assignment24 extends JFrame implements ActionListener {
    private JTextField display;
    private String operator;
    private double num1, num2;

    public assignment24() {
        // Frame settings
        setTitle("Simple Calculator");
        setSize(300, 400);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Display field
        display = new JTextField();
        display.setEditable(false);
        display.setHorizontalAlignment(SwingConstants.RIGHT);
        add(display, BorderLayout.NORTH);

        // Panel for buttons
        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(4, 4));

        // Button labels
        String[] buttonLabels = {
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "C", "0", "=", "+"
        };

        // Adding buttons to the panel
        for (String label : buttonLabels) {
            JButton button = new JButton(label);
            button.addActionListener(this);
            buttonPanel.add(button);
        }

        add(buttonPanel, BorderLayout.CENTER);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();

        if (command.charAt(0) >= '0' && command.charAt(0) <= '9') {
            display.setText(display.getText() + command);
        } else if (command.equals("C")) {
            display.setText("");
            operator = "";
            num1 = num2 = 0;
        } else if (command.equals("=")) {
            num2 = Double.parseDouble(display.getText());
            try {
                double result = calculate(num1, num2, operator);
                display.setText(String.valueOf(result));
            } catch (ArithmeticException ex) {
                display.setText("Error: " + ex.getMessage());
            }
        } else {
            if (!operator.isEmpty()) {
                num2 = Double.parseDouble(display.getText());
                try {
                    num1 = calculate(num1, num2, operator);
                } catch (ArithmeticException ex) {
                    display.setText("Error: " + ex.getMessage());
                    return;
                }
                display.setText(String.valueOf(num1));
            } else {
                num1 = Double.parseDouble(display.getText());
            }
            operator = command;
            display.setText("");
        }
    }

    private double calculate(double num1, double num2, String operator) {
        switch (operator) {
            case "+":
                return num1 + num2;
            case "-":
                return num1 - num2;
            case "*":
                return num1 * num2;
            case "/":
                if (num2 == 0) {
                    throw new ArithmeticException("Cannot divide by zero");
                }
                return num1 / num2;
            case "%":
                return num1 % num2;
            default:
                return 0;
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            assignment24 calculator = new assignment24();
            calculator.setVisible(true);
        });
    }
}
