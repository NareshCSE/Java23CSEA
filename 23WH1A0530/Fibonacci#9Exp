package cse_23wh1a0530;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;
import java.util.Set;

public class Fibnocci {
    public static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
    public static Set<Integer> fibonacciUpToN(int n) {
        Set<Integer> fibSet = new HashSet<>();
        int a = 0, b = 1;
        while (a <= n) {
            fibSet.add(a);
            int next = a + b;
            a = b;
            b = next;
        }
        return fibSet;
    }

    public static List<Integer> primeFibonacci(int n) {
        List<Integer> primes = new ArrayList<>();
        Set<Integer> fibSet = fibonacciUpToN(n);
        
        for (int i = 2; i <= n; i++) {
            if (isPrime(i) && fibSet.contains(i)) {
                primes.add(i);
            }
        }
        return primes;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number n: ");
        int n = scanner.nextInt();
        
        List<Integer> primeFibNumbers = primeFibonacci(n);
        System.out.println("Prime Fibonacci numbers between 1 and " + n + " are: " + primeFibNumbers);
        
        scanner.close();
    }
}

